import u from"qs";var f;(C=>{function d(e="",s=!0){return typeof e=="object"&&(e=u.stringify(e)),e=e.startsWith("&")?e.slice(1):e,e?e=`${s?"?":""}${e}`:e="",e.replaceAll("&?","&")}C.sanitizeQuery=d;function S(...e){}C.mergeQueries=S;async function T(e=null,s,o,i=!1,l){let n,a,t;try{if(!e)throw new Error("No data returned from Strapi");a=e,t="attributes"in a?.data?"entry":"collection"}catch(r){return console.error(`Error parsing entry ${s}/${o}: ${r.message}`),{data:void 0,error:r}}return t==="entry"?n=a.data:i?Array.isArray(a.data)?n=a.data[0]:n=a.data:n=a,{data:n,error:void 0}}C.coerceData=T;function D(e){return Array(e.pagination.pageCount).fill(0).map((s,o)=>o+2).slice(0,e.pagination.pageCount-1)}C.indexArrayFromMeta=D;function R(e={}){return{verboseLogging:!1,extractData:!1,...e}}C.mergeDefaultHermesOptions=R;async function b(e){function s(t){return t!==null&&typeof t=="object"}function o(t){return Array.isArray(t)}function i(t){return s(t)&&"id"in t&&"attributes"in t}function l(t){return"data"in t?!!(o(t.data)&&t.data.every(r=>s(r)&&"id"in r&&"attributes"in r)||s(t.data)&&"id"in t.data&&"attributes"in t.data):!1}async function n(t){switch(!0){case o(t):{let r=t.map(async p=>n(p));return await Promise.all(r)}case s(t):{let r={...t};if(l(t))return await n(t.data);if(i(t)){let{id:c,attributes:y,...m}=t;r={id:c,...y,...m}}let p=Object.entries(r).map(async([c,y])=>[c,await n(y)]);return Object.fromEntries(await Promise.all(p))}default:return t}}let a;return e?.data?a=e.data:a=e,await n(a)}C.extractStrapiData=b})(f||(f={}));var I=f;export{I as a};
